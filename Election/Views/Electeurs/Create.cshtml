@model Election.Models.Electeur

@{
    Layout = "~/Views/Shared/_admin.cshtml";
}

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/Style.css" rel="stylesheet" />

<h2  class="alert alert-success">Nouveau electeur</h2>
<div class="container">
    <div class="row">
        
        <div class="col-sm-8">


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Electeur</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cni, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cni, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cni, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.avoter, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.avoter, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.avoter, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.bureau, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.bureau, new { htmlAttributes = new { @class = "form-control" } })
                            @*@Html.DropDownList("Bureaux de vote"
                                new SelectList(ViewBag.liste),
                                "Bureau de vote",
                                new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(model => model.bureau, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.compte, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.compte, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.compte, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>


                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            }

            @{
                foreach (var item in @ViewBag.liste)
                {
                    @item.code;
                }
            }



            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }

        </div>
    </div>
</div>
